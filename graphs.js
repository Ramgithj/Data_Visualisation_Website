    //MY WORK!!


//Put plotData in the Javascript object that is going to be plotted

let timeInterval = 1000;

let numTimeInterval = 100;


//Plot into the graph - cad
function plotData(dataStructureObject){
    //drawing specifications
    let actualTrace ={
        x: dataStructureObject.CAD.actual.x,
        y: dataStructureObject.CAD.actual.y,
        paper_bgcolor: '#000000',
        plot_bgcolor: '#000000',
        mode:'line',
        name: "CAD",
        marker: {
            color: 'rgb (223, 97, 36)',
            size: 20
        }
    };
    
    //Mean trace for GBP
    
   
    let actualTraceUSD ={
        x: dataStructureObject.USD.actual.x,
        y: dataStructureObject.USD.actual.y,
        mode:'line',
        name: "USD",
        marker: {
            color: 'rgb (298, 18, 55)',
            size: 20
        }
    };

    let actualTraceGBP ={
        x: dataStructureObject.GBP.actual.x,
        y: dataStructureObject.GBP.actual.y,
        mode:'line',
        name: "GBP",
        marker: {
            color: 'rgb (15, 225, 55)',
            size: 20
        }
    };
    
     let GBPMean = {
        x: [1585353600000,1585267200000,1585180800000,1585094400000,1585008000000,1584921600000,1584835200000,1584748800000,1584662400000,1584576000000,1584489600000,1584403200000,1584316800000,1584230400000,1584144000000,1584057600000,1583971200000,1583884800000,1583798400000,1583712000000,1583625600000,1583539200000,1583452800000,1583366400000,1583280000000,1583193600000,1583107200000,1583020800000,1582934400000,1582848000000,1582761600000,1582675200000,1582588800000,1582502400000,1582416000000,1582329600000,1582243200000,1582156800000,1582070400000,1581984000000,1581897600000,1581811200000,1581724800000,1581638400000,1581552000000,1581465600000,1581379200000,1581292800000,1581206400000,1581120000000,1581033600000,1580947200000,1580860800000,1580774400000,1580688000000,1580601600000,1580515200000,1580428800000,1580342400000,1580256000000,1580169600000,1579305600000,1579219200000,1579132800000,1579046400000,1578960000000,1578873600000,1578787200000,1578700800000,1578614400000,1578528000000,1578441600000,1578355200000,1578268800000,1578182400000,1578096000000,1578009600000,1577923200000,1577836800000,1577750400000,1577664000000,1577577600000,1577491200000,1577404800000,1577318400000,1577232000000,1577145600000,1577059200000,1576972800000,1576886400000,1576800000000,1576713600000,1576627200000,1576540800000,1576454400000,1576368000000,1576281600000,1576195200000,1576108800000,1576022400000,1575936000000,1575849600000,1575763200000,1575676800000,1575590400000,1575504000000,1575417600000,1575331200000,1575244800000,1575158400000,1575072000000,1574985600000,1574899200000,1574812800000,1574726400000,1574640000000,1574553600000,1574467200000,1574380800000,1574294400000,1574208000000,1574121600000,1574035200000,1573948800000,1573862400000,1573776000000,1573689600000,1573603200000,1573516800000,1573430400000,1573344000000,1573257600000,1573171200000,1573084800000,1572998400000,1572912000000,1572825600000,1572739200000,1572652800000,1572566400000,1572480000000,1572393600000,1572307200000,1572220800000,1572134400000,1572048000000,1571961600000,1571875200000,1571788800000,1571702400000,1571616000000,1571529600000,1571443200000,1571356800000,1571270400000,1571184000000,1571097600000,1571011200000,1570924800000,1570838400000,1570752000000,1570665600000,1570579200000,1570492800000,1570406400000,1570320000000,1570233600000,1570147200000,1570060800000,1569974400000,1569888000000,1569801600000,1569715200000,1569628800000,1569542400000,1569456000000,1569369600000,1569283200000,1569196800000,1569110400000,1569024000000,1568937600000,1568851200000,1568764800000,1568678400000,1568592000000,1568505600000,1568419200000,1568332800000,1568246400000,1568160000000,1568073600000,1567987200000,1567900800000,1567814400000,1567728000000,1567641600000,1567555200000,1567468800000,1567382400000,1567296000000,1567209600000,1567123200000,1567036800000,1566950400000,1566864000000,1566777600000,1566691200000,1566604800000,1566518400000,1566432000000,1566345600000,1566259200000,1566172800000,1566086400000,1566000000000,1565913600000,1565827200000,1565740800000,1565654400000,1565568000000,1565481600000,1565395200000,1565308800000,1565222400000,1565136000000,1565049600000,1564963200000,1564876800000,1564790400000,1564704000000,1564617600000,1564531200000,1564444800000,1564358400000,1564272000000,1564185600000,1564099200000,1564012800000,1563926400000,1563840000000,1563753600000,1563667200000,1563580800000,1563494400000,1563408000000,1563321600000,1563235200000,1563148800000,1563062400000,1562976000000,1562889600000,1562803200000,1562716800000,1562630400000,1562544000000,1562457600000,1562371200000,1562284800000,1562198400000,1562112000000,1562025600000,1561939200000,1561852800000,1561766400000,1561680000000,1561593600000,1561507200000,1561420800000,1561334400000,1561248000000,1561161600000,1561075200000,1560988800000,1560902400000,1560816000000,1560729600000,1560643200000,1560556800000,1560470400000,1560384000000,1560297600000,1560211200000,1560124800000,1560038400000,1559952000000,1559865600000,1559779200000,1559692800000,1559606400000,1559520000000,1559433600000,1559347200000,1559260800000,1559174400000,1559088000000,1559001600000,1558915200000,1558828800000,1558742400000,1558656000000,1558569600000,1558483200000,1558396800000,1558310400000,1558224000000,1558137600000,1558051200000,1557964800000,1557878400000,1557792000000,1557705600000,1557619200000,1557532800000,1557446400000,1557360000000,1557273600000,1557187200000,1557100800000,1557014400000,1556928000000,1556841600000,1556755200000,1556668800000,1556582400000,1556496000000,1556409600000,1556323200000,1556236800000,1556150400000,1556064000000,1555977600000,1555891200000,1555804800000,1555718400000,1555632000000,1555545600000,1555459200000,1555372800000,1555286400000,1555200000000,1555113600000,1555027200000,1554940800000,1554854400000,1554768000000,1554681600000,1554595200000,1554508800000,1554422400000,1554336000000,1554249600000,1554163200000,1554076800000,1553990400000,1553904000000,1553817600000,1553731200000,1553644800000,1553558400000,1553472000000,1553385600000,1553299200000,1553212800000,1553126400000,1553040000000,1552953600000,1552867200000,1552780800000,1552694400000,1552608000000,1552521600000,1552435200000,1552348800000,1552262400000,1552176000000,1552089600000,1552003200000,1551916800000,1551830400000,1551744000000,1551657600000,1551571200000,1551484800000,1551398400000,1551312000000,1551225600000,1551139200000,1551052800000,1550966400000,1550880000000,1550793600000,1550707200000,1550620800000,1550534400000,1550448000000,1550361600000,1550275200000,1550188800000,1550102400000,1550016000000,1549929600000,1549843200000,1549756800000,1549670400000,1549584000000,1549497600000,1549411200000,1549324800000,1549238400000,1549152000000,1549065600000,1548979200000,1548892800000,1548806400000,1548720000000,1548633600000,1548547200000,1548460800000,1548374400000,1548288000000,1548201600000,1548115200000,1548028800000,1547942400000,1547856000000,1547769600000,1547683200000,1547596800000,1547510400000,1547424000000,1547337600000,1547251200000,1547164800000,1547078400000,1546992000000,1546905600000,1546819200000,1546732800000,1546646400000,1546560000000,1546473600000,1546387200000,1546300800000,1546214400000,1546128000000,1546041600000,1545955200000,1545868800000,1545782400000],
        
        y: [ 0.8615483046,
                0.8641902208,
                0.8596763015,
                0.8693645597,
                0.8628968596,
                0.8605321646,
                0.8658414483,
                0.8635686636,
                0.8655160666,
                0.8635231256,
                0.8698261976,
                0.8641021848,
                0.8643741608,
                0.8691321611,
                0.8657053113,
                0.8640341163,
                0.8649790883,
                0.866959691,
                0.8612463474,
                0.8585060239,
                0.8515662551,
                0.8540478349,
                0.8579810858,
                0.852878511,
                0.8573175073,
                0.8604802489,
                0.860258162,
                0.8612824082,
                0.863738656,
                0.860717535,
                0.8605878353,
                0.8720229268,
                0.8688610196,
                0.8621625304,
                0.8639885783,
                0.866578877,
                0.8683379889,
                0.8665907383,
                0.8667395711,
                0.869150877,
                0.8658031225,
                0.8623449802,
                0.8671239614,
                0.8668128848,
                0.8658231497,
                0.8611172438,
                0.8620531559,
                0.8602507114,
                0.8586720824,
                0.8604513407],
        mode:'line',
        name: "USD",
        marker: {
            color: 'rgb (298, 18, 55)',
            size: 20    
    }
    };


    let actualTraceINR ={
        x: dataStructureObject.INR.actual.x,
        y: dataStructureObject.INR.actual.y,
        mode:'line',
        name: "INR",
        marker: {
            color: 'rgb (150, 25, 95)',
            size: 20
        }
    };

    let actualTraceBTN ={
        x: dataStructureObject.BTN.actual.x,
        y: dataStructureObject.BTN.actual.y,
        mode:'line',
        name: "BTN",
        marker: {
            color: 'rgb (9 , 140, 21)',
            size: 20
        }
    };

    let actualTraceLKR ={
        x: dataStructureObject.LKR.actual.x,
        y: dataStructureObject.LKR.actual.y,
        mode:'line',
        name: "LKR",
        marker: {
            color: 'rgb (90 , 40, 21)',
            size: 20
        }
    };
//PLOT Sentiment graph

    // let predictedTrace ={
    //     x: dataStructureObject.predicted.x,
    //     y: dataStructureObject.predicted.y,
    //     mode: 'line',
    //     name: "Weather Predicted",
    //     marker: {
    //         color: 'rgb (255, 0, 0',
    //         size: 20
    //     }
    // };
    
    

    //Graph settings
    let numericalLayout ={
        title: "Currency",
        xaxis: {
            title: 'Time'
        },
        yaxis:{
            title: 'Price',
        },
        paper_bgcolor: '#000000',
        plot_bgcolor: '#000000',
        //boxmode: 'group'
    };
    
     // SENTIMENT DATA
    let GBPsentiment = [{
        values:[
            dataStructureObject.GBP.sentiment.positive[0],
            dataStructureObject.GBP.sentiment.negative[0],
            dataStructureObject.GBP.sentiment.neutral[0],
            dataStructureObject.GBP.sentiment.mixed[0],
        ],
        labels: ['Positive', 'Negative', 'Neutral', 'Mixed'],
        type: 'pie',
    }];
    let CADsentiment = [{
        values:[
            dataStructureObject.CAD.sentiment.positive[0],
            dataStructureObject.CAD.sentiment.negative[0],
            dataStructureObject.CAD.sentiment.neutral[0],
            dataStructureObject.CAD.sentiment.mixed[0],
        ],
        labels: ['Positive', 'Negative', 'Neutral', 'Mixed'],
        type: 'pie',
    }];

    let USDsentiment = [{
        values:[
            dataStructureObject.USD.sentiment.positive[0],
            dataStructureObject.USD.sentiment.negative[0],
            dataStructureObject.USD.sentiment.neutral[0],
            dataStructureObject.USD.sentiment.mixed[0],
        ],
        labels: ['Positive', 'Negative', 'Neutral', 'Mixed'],
        type: 'pie',
    }];

    let INRsentiment = [{
        values:[
            dataStructureObject.INR.sentiment.positive[0],
            dataStructureObject.INR.sentiment.negative[0],
            dataStructureObject.INR.sentiment.neutral[0],
            dataStructureObject.INR.sentiment.mixed[0],
        ],
        labels: ['Positive', 'Negative', 'Neutral', 'Mixed'],
        type: 'pie',
    }];

    let LKRsentiment = [{
        values:[
            dataStructureObject.LKR.sentiment.positive[0],
            dataStructureObject.LKR.sentiment.negative[0],
            dataStructureObject.LKR.sentiment.neutral[0],
            dataStructureObject.LKR.sentiment.mixed[0],
        ],
        labels: ['Positive', 'Negative', 'Neutral', 'Mixed'],
        type: 'pie',
    }];

    let BTNsentiment = [{
        values:[
            dataStructureObject.BTN.sentiment.positive[0],
            dataStructureObject.BTN.sentiment.negative[0],
            dataStructureObject.BTN.sentiment.neutral[0],
            dataStructureObject.BTN.sentiment.mixed[0],
        ],
        labels: ['Positive', 'Negative', 'Neutral', 'Mixed'],
        type: 'pie',
    }];
    let sentimentLayout ={
       height:380,
        width:380,
        paper_bgcolor: '#000000',
        plot_bgcolor: '#000000',
        //boxmode: 'group'
    };


    //Data for graph is in an array of line for graph
    let chartData = [GBPMean, actualTraceGBP];
    let chartDataUSD = [actualTraceUSD,actualTrace];
    let chartDataGBP = [actualTraceGBP,actualTraceUSD];
    let chartDataINR = [actualTraceINR,actualTraceBTN,actualTraceLKR];

    //let chartData = [actualTrace];

    //plot numerical data
    Plotly.newPlot(cadDiv, chartData, numericalLayout);
    Plotly.newPlot(usdDiv, chartDataUSD, numericalLayout);
    Plotly.newPlot(gbpDiv, chartDataGBP, numericalLayout);
    Plotly.newPlot(inrDiv, chartDataINR, numericalLayout);
//PLOT Sentiment data
    Plotly.newPlot(sentimentGBP, GBPsentiment, sentimentLayout);
    Plotly.newPlot(sentimentCAD, CADsentiment, sentimentLayout);
    Plotly.newPlot(sentimentUSD, USDsentiment, sentimentLayout);
    Plotly.newPlot(sentimentINR, INRsentiment, sentimentLayout);
    Plotly.newPlot(sentimentLKR, LKRsentiment, sentimentLayout);
    Plotly.newPlot(sentimentBTN, BTNsentiment, sentimentLayout);



    let graphOptions = {
        layout: numericalLayout,
        filename: "Numerical Chart",
        fileopt: "overwrite"
    };
    let graphOptionsSentiment = {
        layout: sentimentLayout,
        filename: "Numerical Chart",
        fileopt: "overwrite"
    };

     
   
}