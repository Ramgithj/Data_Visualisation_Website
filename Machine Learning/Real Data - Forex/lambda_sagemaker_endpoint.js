//Import AWS
let AWS = require("aws-sdk");

//Data that we are going to send to endpoint
//REPLACE THIS WITH YOUR OWN DATA!
let endpointData = {
    "instances":
        [
            {
                "start":"2020-04-28 23:10:00",
                "target": [0.861525,0.858381,0.853521,0.853482,0.857463,0.861873,0.861049,0.861049,0.860151,0.855554,0.853428,0.856267,0.855405,0.856542,0.856898,0.866258,0.8654,0.855679,0.854715,0.851303,0.851818,0.851818,0.852934,0.852911,0.863918,0.849927,0.864817,0.863451,0.863451,0.855409,0.85821,0.859426,0.860305,0.859312,0.861325,0.861325,0.857423,0.854492,0.859401,0.865805,0.868118,0.868853,0.868887,0.869626,0.869789,0.868336,0.875306,0.875349,0.875964,0.875964,0.882583,0.876265,0.879189,0.876814,0.875369,0.875293,0.875735,0.875652,0.878763,0.8806,0.877671,0.875973,0.875217,0.875217,0.873215,0.875621,0.874316,0.868451,0.86408,0.863707,0.863542,0.862122,0.870351,0.877018,0.881957,0.884326,0.882756,0.882756,0.877443,0.884578,0.886784,0.891189,0.891865,0.892433,0.892433,0.902276,0.902769,0.899396,0.897914,0.896031,0.895172,0.895172,0.902007,0.903928,0.898677,0.902218,0.901327,0.900097,0.900097,0.903937,0.898245]
				
				 "start":"2020-04-28 23:12:00",
                "target": [1.504206,1.500061,1.500655,1.495151,1.491817,1.498277,1.499354,1.500258,1.508285,1.509063,1.508563,1.515626,1.516708,1.522214,1.522214,1.520494,1.518547,1.512936,1.512149,1.510403,1.513985,1.513985,1.506827,1.506705,1.507904,1.508174,1.507397,1.507946,1.507946,1.505593,1.520798,1.50996,1.509237,1.511185,1.512814,1.512814,1.497296,1.49598,1.499809,1.498595,1.489574,1.489881,1.489881,1.49994,1.494539,1.498181,1.497265,1.495826,1.496278,1.496278,1.501999,1.493686,1.499419,1.500344,1.503414,1.505297,1.505297,1.509303,1.502027,1.497664,1.500043,1.500753,1.501212,1.501212,1.502561,1.50953,1.517635,1.515563,1.509162,1.507089,1.507089,1.510171,1.519075,1.518003,1.511776,1.509013,1.507594,1.507594,1.512991,1.511289,1.51358,1.523338,1.520539,1.521606,1.521606,1.5237,1.526584,1.517828,1.52659,1.525556,1.524099,1.524099,1.535436,1.542879,1.56175,1.558834,1.558591,1.559918,1.559918,1.557019,1.542311]
				
				"start":"2020-04-28 23:14:00",
                "target": [1.123254,1.122359,1.124549,1.120341,1.12053,1.122347,1.123153,1.123153,1.122958,1.125138,1.127434,1.131529,1.129554,1.132048,1.132048,1.137456,1.142752,1.135454,1.133588,1.131939,1.134449,1.134449,1.130806,1.133074,1.128713,1.125885,1.123205,1.123949,1.123949,1.119796,1.131247,1.130608,1.133703,1.137559,1.137754,1.137754,1.137314,1.137987,1.139283,1.136496,1.134179,1.134153,1.134153,1.134046,1.134591,1.134049,1.131164,1.12965,1.129649,1.129649,1.129497,1.126456,1.133421,1.127866,1.132387,1.133549,1.133549,1.133838,1.136564,1.140947,1.143583,1.145482,1.145744,1.145744,1.144682,1.148499,1.143491,1.142851,1.141272,1.140049,1.140049,1.131095,1.138562,1.136357,1.136887,1.136519,1.137249,1.137249,1.13921,1.13977,1.141424,1.147256,1.145981,1.146953,1.146953,1.1507,1.155448,1.145574,1.147941,1.141012,1.139556,1.139556,1.139056,1.131753,1.146125,1.149155,1.143962,1.143844,1.143844,1.14306,1.136099]
				
		
            }
        ],
    "configuration":
        {
            "num_samples": 50,
            "output_types":["mean","quantiles","samples"],
            "quantiles":["0.1","0.9"]
        }
};

//Name of endpoint
//REPLACE THIS WITH THE NAME OF YOUR ENDPOINT
const endpointName = "numerical-endpoint";

//Parameters for calling endpoint
let params = {
    EndpointName: endpointName,
    Body: JSON.stringify(endpointData),
    ContentType: "application/json",
    Accept: "application/json"
};

//AWS class that will query endpoint
let awsRuntime = new AWS.SageMakerRuntime({});

//Handler for Lambda function
exports.handler = event => {
    //Call endpoint and handle response
    awsRuntime.invokeEndpoint(params, (err, data)=>{
        if (err) {//An error occurred
            console.log(err, err.stack);

            //Return error response
            const response = {
                statusCode: 500,
                body: JSON.stringify('ERROR: ' + JSON.stringify(err)),
            };
            return response;
        }
        else{//Successful response
            //Convert response data to JSON
            let responseData = JSON.parse(Buffer.from(data.Body).toString('utf8'));
            console.log(JSON.stringify(responseData));

            //TODO: STORE DATA IN PREDICTION TABLE

            //Return successful response
            const response = {
                statusCode: 200,
                body: JSON.stringify('Predictions stored.'),
            };
            return response;
        }
    });
};

